[{"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/index.js":"1","/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/App.js":"2","/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/reportWebVitals.js":"3","/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/components/ToDoList.js":"4","/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/components/ToDoItem.js":"5"},{"size":628,"mtime":1685015863217,"results":"6","hashOfConfig":"7"},{"size":372,"mtime":1685014931932,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1685014931934,"results":"9","hashOfConfig":"7"},{"size":2933,"mtime":1685534786193,"results":"10","hashOfConfig":"7"},{"size":441,"mtime":1685044708918,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2xc29c",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/index.js",[],[],"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/App.js",[],[],[],"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/reportWebVitals.js",[],[],"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/components/ToDoList.js",[],[],"/Users/megan/Desktop/VZ-FS-23-01/todo_full/FE/src/components/ToDoItem.js",["29"],[],"import { useState } from \"react\";\n\nconst ToDoItem = ({ task, completedTodo }) => {\n\n    return (\n        <form action=\"\">\n            <input type=\"checkbox\" name=\"\" id=\"\" onChange={() => completedTodo(task.id, !task.completed)} />\n            <label style={{ textDecoration: task.completed ? \"line-through\" : \"none\", color: task.completed ? \"darkblue\" : \"darksalmon\" }}>{task.title}</label>\n        </form>\n    );\n}\n\nexport default ToDoItem;",{"ruleId":"30","severity":1,"message":"31","line":1,"column":10,"nodeType":"32","messageId":"33","endLine":1,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]