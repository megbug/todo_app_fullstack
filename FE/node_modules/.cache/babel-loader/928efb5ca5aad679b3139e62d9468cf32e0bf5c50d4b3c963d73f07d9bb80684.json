{"ast":null,"code":"var _jsxFileName = \"/Users/megan/Desktop/VZ-FS-23-01/day 53/lvl_3_1_web_todo/src/components/ToDoItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoItem = () => {\n  _s();\n  const [check, setCheck] = useState([]);\n  const addCheck = () => {\n    const inputText = document.querySelector('form input[type=\"text\"]');\n    // spread operator\n    setCheck([...check, inputText.value]);\n  };\n  const [toggle, setToggle] = useState(false);\n  const handleClick = () => {\n    setToggle(!toggle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add ToDo\",\n        onClick: addCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: check.map(elt => {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"\",\n            id: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [elt, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                display: toggle ? 'block' : 'none'\n              },\n              children: \" l\\xF6schen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoItem, \"Q+7CBlmFVa3a8aXjnAXsh2znbjk=\");\n_c = ToDoItem;\nexport default ToDoItem;\nvar _c;\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ToDoItem","_s","check","setCheck","addCheck","inputText","document","querySelector","value","toggle","setToggle","handleClick","children","action","type","name","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","elt","style","display","_c","$RefreshReg$"],"sources":["/Users/megan/Desktop/VZ-FS-23-01/day 53/lvl_3_1_web_todo/src/components/ToDoItem.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst ToDoItem = () => {\n    const [check, setCheck] = useState([]);\n\n    const addCheck = () => {\n        const inputText = document.querySelector('form input[type=\"text\"]');\n        // spread operator\n        setCheck([...check, inputText.value]);\n    }\n\n    const [toggle, setToggle] = useState(false);\n    const handleClick = () => {\n        setToggle(!toggle)\n    }\n    return (\n        <div>\n            <form action=\"#\">\n                <input type=\"text\" name=\"\" id=\"\" />\n                <input type=\"button\" value=\"Add ToDo\" onClick={addCheck} />\n            </form>\n            <article>\n                {check.map((elt) => {\n                    return (\n                        <form action=\"\">\n                            <input type=\"checkbox\" name=\"\" id=\"\" />\n                            <label>{elt} <a style={{ display: toggle ? 'block' : 'none' }}> l√∂schen</a></label>\n                        </form>\n                    )\n                })}\n            </article>\n        </div>\n    );\n}\n\nexport default ToDoItem;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC;IACnE;IACAJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,SAAS,CAACG,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EACD,oBACIV,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAMc,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACZb,OAAA;QAAOe,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,EAAE;QAACC,EAAE,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnCrB,OAAA;QAAOe,IAAI,EAAC,QAAQ;QAACN,KAAK,EAAC,UAAU;QAACa,OAAO,EAAEjB;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxD,eACPrB,OAAA;MAAAa,QAAA,EACKV,KAAK,CAACoB,GAAG,CAAEC,GAAG,IAAK;QAChB,oBACIxB,OAAA;UAAMc,MAAM,EAAC,EAAE;UAAAD,QAAA,gBACXb,OAAA;YAAOe,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC,EAAE;YAACC,EAAE,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACvCrB,OAAA;YAAAa,QAAA,GAAQW,GAAG,EAAC,GAAC,eAAAxB,OAAA;cAAGyB,KAAK,EAAE;gBAAEC,OAAO,EAAEhB,MAAM,GAAG,OAAO,GAAG;cAAO,CAAE;cAAAG,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChF;MAEf,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEd,CAAC;AAAAnB,EAAA,CA/BKD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}